1. it('scenari 1: poisk produkta i proverka resultatov')
Сценарий: Пользователь хочет найти определенный товар в интернет-магазине DNS Shop. Он вводит название товара в поле поиска и нажимает кнопку “Найти”. После этого он хочет убедиться, что в результатах поиска отображаются товары, соответствующие его запросу.
Пользователь вводит текст “Видеокарта RTX 3060” в поле поиска, расположенном в шапке сайта.
Пользователь нажимает на кнопку “Найти” (или нажимает клавишу Enter в поле поиска).
Сайт отображает страницу с результатами поиска.
Пользователь проверяет, что на странице отображаются элементы, представляющие товары.
Пользователь проверяет, что названия товаров в списке результатов поиска содержат текст “RTX 3060” (или другую часть поискового запроса).
Ожидаемый результат:
На странице отображаются результаты поиска.
Каждый товар в списке результатов поиска содержит в своем названии часть поискового запроса (например, “RTX 3060”).
Если результаты не найдены, отображается соответствующее сообщение.

2. it('scenar 2: dobavlenie producta v korzinu i proverka')
Сценарий: Пользователь хочет купить товар и добавляет его в корзину. После добавления товара в корзину он хочет убедиться, что товар действительно находится в корзине и отображается с правильным названием.
Действия:
Пользователь переходит на страницу товара (например, видеокарты Palit GeForce RTX 3060).
Пользователь нажимает на кнопку “Купить”.
Сайт добавляет товар в корзину.
Пользователь проверяет, что счетчик товаров в корзине (в шапке сайта) увеличился (не равен 0).
Пользователь открывает корзину (например, кликнув на иконку корзины в шапке сайта).
Пользователь проверяет, что в корзине отображается добавленный товар.
Пользователь проверяет, что название товара в корзине содержит текст “GeForce RTX 3060” (или часть названия товара).
Ожидаемый результат:
Количество товаров в корзине увеличилось.
В корзине отображается добавленный товар с правильным названием.

3. it('scenar 3: proverka tovara v opredelennom gorode')
Сценарий: Пользователь хочет узнать, есть ли товар в наличии в определенном городе (например, в Ижевске). Он выбирает город и проверяет, что отображается информация о наличии товара в магазинах этого города.
Пользователь переходит на страницу товара.
Пользователь нажимает на элемент выбора города (обычно отображается текущий город).
В списке городов пользователь выбирает город “Ижевск”.
Сайт обновляет информацию о наличии товара в магазинах Ижевска.
Пользователь проверяет, что отображается информация о наличии товара (или отсутствии товара) в магазинах выбранного города.
Пользователь проверяет, что в информации о наличии указан город “Ижевск”.
Ожидаемый результат:
Отображается информация о наличии товара (или отсутствии) в магазинах выбранного города (Ижевска).
В информации о наличии указан правильный город (Ижевск).

4. it('scenari 4: filtr po diapozonu tsen')
Сценарий: Пользователь хочет отфильтровать товары по диапазону цен. Он задает минимальную и максимальную цену и применяет фильтр. После этого он проверяет, что на странице отображаются только товары, цена которых находится в заданном диапазоне.
Пользователь переходит на страницу категории товаров (например, “Видеокарты”).
Пользователь находит элементы управления для задания диапазона цен (обычно это поля ввода для минимальной и максимальной цены).
Пользователь вводит значение “20000” в поле для минимальной цены.
Пользователь вводит значение “40000” в поле для максимальной цены.
Пользователь нажимает на кнопку “Применить” (или аналогичную кнопку для применения фильтра).
Сайт обновляет список товаров, отображая только товары, цена которых находится в заданном диапазоне.
Пользователь проверяет, что цена каждого товара на странице находится в диапазоне от 20000 до 40000 рублей.
Ожидаемый результат:
На странице отображаются только товары, цена которых находится в заданном диапазоне (от 20000 до 40000 рублей).

5. it('scenari 5: sortirobka tovara po tsene i proverka')
Сценарий: Пользователь хочет отсортировать товары по цене (например, по возрастанию), чтобы увидеть самые дешевые товары в начале списка. Он выбирает порядок сортировки и проверяет, что товары отсортированы правильно.
Пользователь переходит на страницу категории товаров (например, “Видеокарты”).
Пользователь находит элемент управления для выбора порядка сортировки (обычно это выпадающий список или набор ссылок).
Пользователь выбирает опцию “По цене (возрастанию)”.
Сайт пересортировывает список товаров.
Пользователь проверяет, что цены товаров в списке отсортированы по возрастанию (то есть цена каждого следующего товара больше или равна цене предыдущего товара).
Ожидаемый результат:
Товары на странице отсортированы по цене в порядке возрастания.